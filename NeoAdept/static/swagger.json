{
  "swagger": "2.0",
  "info": {
    "title": "Screen Resume Project",
    "version": "1.0",
    "description": "API for screening the resume"
  },
  "tags": [
    {
      "name": "ScreenResume",
      "description": "Operations related to  ScreenResume services "
    }
  ],
  "paths": {
    "/upload_resume": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "upload document into MongoDb",
        "description": "upload file_info and resume_details into MongoDb",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "type": "array",
            "description": "input resumes",
            "required": true,
            "items": {
              "type": "file"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resume uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message indicating success"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Please contact administrator"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get_all_resume": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Get all resume information",
        "description": "Retrieve all resume information based on verification status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                },
                "is_verified": {
                  "type": "boolean",
                  "description": "veified resume status"
                }
              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data retrieved successfully"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "status_code": {
                      "type": "integer",
                      "example": 200
                    }
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Resume not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "200b": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Please contact administrator"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get_all_file": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Get all resume information from file_info collection",
        "description": "Retrieve all resume information based on verification status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                },
                "is_verified": {
                  "type": "boolean",
                  "description": "veified resume status"
                }
              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data retrieved successfully"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "status_code": {
                      "type": "integer",
                      "example": 200
                    }
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Resume not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "200b": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Please contact administrator"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get_entity_config": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Get entity configuration details",
        "description": "Retrieve entity configuration details",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }

              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data retrieved successfully"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "status_code": {
                      "type": "integer",
                      "example": 200
                    }
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Please contact administrator"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/add_entity_config": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Add Entity Configuration",
        "description": "Add configuration for a new entity.patteren_type should be list or regex",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "entity_config",
            "description": "Entity configuration object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "entity_name": {
                  "type": "string",
                  "description": "Name of the entity to configure"
                },
                "pattern_type": {
                  "type": "string",
                  "description": "Type of pattern (e.g., list, regex)"
                },
                "regex_pattern": {
                  "type": "string",
                  "description": "Regular expression pattern (if applicable)"
                }
              },
              "required": [ "entity_name", "pattern_type" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Entity name already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/update_entity_config": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Update Entity Configuration",
        "description": "Update configuration for an existing entity.",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "entity_config",
            "description": "Entity configuration object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "entity_name": {
                  "type": "string",
                  "description": "Name of the entity to update"
                },
                "pattern_type": {
                  "type": "string",
                  "description": "Type of pattern (e.g., list, regex)"
                },
                "regex_pattern": {
                  "type": "string",
                  "description": "Regular expression pattern (if applicable)"
                },
                "entity_id": {
                  "type": "string",
                  "description": "id of the entity"
                }
              },
              "required": [ "entity_name", "pattern_type", "regx_pattern", "entity_id" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Entity name does not exist"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/delete_entity_config": {
      "delete": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Delete Entity Configuration",
        "description": "Delete configuration for an existing entity.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity_name",
            "in": "query",
            "description": "Name of the entity to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Entity name does not exist"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/add_data_set": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Add Pattern Set",
        "description": "Add dataset and generate pattern for an existing entity.",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pattern_data_set",
            "description": "Pattern data set object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "entity_name": {
                  "type": "string",
                  "description": "Name of the entity"
                },
                "entity_data_set": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of patterns"
                }
              },
              "required": [ "entity_name", "entity_data_set" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Entity name does not exist"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/update_data_set": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Update data Set and pattern",
        "description": "Update pattern sets for an existing entity.",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pattern_data_set",
            "description": "Pattern data set object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "entity_name": {
                  "type": "string",
                  "description": "Name of the entity"
                },
                "pattern_id": {
                  "type": "string",
                  "description": "ID of the pattern to update"
                },
                "entity_data_set": {
                  "type": "string",
                  "description": "Updated pattern"
                }
              },
              "required": [ "entity_name", "pattern_id", "entity_data_set" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Entity name does not exist"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/delete_data_set": {
      "delete": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Delete data Set",
        "description": "Delete pattern sets for an existing entity.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "pattern_id",
            "in": "query",
            "description": "ID of the pattern to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/get_data_set": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Get Data Set",
        "description": "Retrieve pattern sets based on pagination, search, and filters.",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": { "type": "string" },
                      "label": { "type": "string" },
                      "pattern": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "message": { "type": "string" },
                "status": { "type": "string" },
                "status_code": { "type": "integer" }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Pattern set is empty"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/view_file": {
      "get": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "View File",
        "description": "View resume file information and content.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "file_id",
            "in": "query",
            "description": "ID of the file to view",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "CERTIFICATIONS": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "COMPANY": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "EDU": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "EMAIL": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "EXPERIENCE": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "LANGUAGES": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "MOBILE": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "PERSON": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "ROLE": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "SKILL": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "file_id": { "type": "string" },
                    "file_location_path": { "type": "string" },
                    "file_name": { "type": "string" },
                    "file_type": { "type": "string" }
                  }
                },
                "message": { "type": "string" },
                "status": { "type": "string" },
                "status_code": { "type": "integer" }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/save_file": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Save File",
        "description": "Save resume file and associated entities.",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "entity_data",
            "description": "Entity data to save",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "CERTIFICATIONS": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "COMPANY": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "EDU": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "EMAIL": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "EXPERIENCE": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "LANGUAGES": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "MOBILE": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "PERSON": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "ROLE": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "SKILL": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "file_id": { "type": "string" }
              },
              "required": [ "CERTIFICATIONS", "COMPANY", "EDU", "EMAIL", "EXPERIENCE", "LANGUAGES", "MOBILE", "PERSON", "ROLE", "SKILL", "file_id", "file_location_path", "file_name", "file_type" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "status": { "type": "string" }
              }
            }
          },
          "201": {
            "description": "Error while saving file or entities"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/get_resume_list": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Get Resume List",
        "description": "Retrieve a list of resumes based on pagination, search, and filters.",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": { "type": "string" },
                      "data": {
                        "type": "object",
                        "properties": {
                          "CERTIFICATIONS": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "COMPANY": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "EDU": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "EMAIL": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "EXPERIENCE": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "LANGUAGES": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "MOBILE": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "PERSON": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "ROLE": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "SKILL": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "file_id": { "type": "string" },
                          "file_name": { "type": "string" },
                          "file_type": { "type": "string" },
                          "file_location_path": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "message": { "type": "string" },
                "status": { "type": "string" },
                "status_code": { "type": "integer" }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "No data found"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/delete_resume_list": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Delete resume list",
        "description": "Delete resume .",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "request data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "file_ids": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "The resume file with the id doesnot exists"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/reload_model": {
      "get": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Reload Model",
        "description": "Reload the resume model.",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {

          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "status": { "type": "string" }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/upload_resume_details_from_excel": {
      "post": {
        "tags": [ "Resume Routes" ],
        "summary": "upload resume details  ",
        "security": [ { "jwt": [] } ],
        "description": "upload resume details from excel",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "description": "Excel file containing resume details",
            "required": true
          }
        ],
        "responses": {

          "200": {
            "description": "Data uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 14
                        },
                        "data": {
                          "type": "object",
                          "example": {
                            "0": "No update required for the 65f1d70ff0808abe8628a8e1",
                            "3": "f'Null or empty value found in document at index 3 for key columnname'",
                            "1": "file_name already exist in the db for the _id 65f1d70ff0808abe8628a8e1",
                            "2": "updated successfully for the _id 65f98eff32a61d2b782bc067",
                            "4": "inserted successfully and generated _id is 65f1d70ff0808abe8628a8e1"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Data retrieved successfully"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "status_code": {
                      "type": "integer",
                      "example": "200,201"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_cv_list_from_file_info": {
      "post": {
        "tags": [
          "Resume Routes"
        ],
        "summary": "Delete resume list from file_info collection",
        "description": "Delete resume .",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "request data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "file_ids": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "The resume file with the id doesnot exists"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/get_instance": {
      "get": {
        "tags": [ "Login Routes" ],
        "summary": "Get login instance information",
        "description": "Get client information and api_url for the domain extracted from the request URL.",
        "parameters": [
          {
            "in": "header",
            "name": "Origin",
            "type": "string",
            "description": "Origin header for domain information",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "api_url and client information retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "client_name": {
                  "type": "string",
                  "description": "Name of the client",
                  "minLength": 1
                },
                "client_address": {
                  "type": "string",
                  "description": "Address of the client"
                },
                "contact_person": {
                  "type": "string",
                  "description": "Name of the contact person"
                },
                "email": {
                  "type": "string",
                  "description": "Contact email of the client"
                },
                "phone": {
                  "type": "string",
                  "description": "Contact number of the client"
                },
                "api_url": {
                  "type": "string",
                  "description": "application url of the client"
                },
                "domain": {
                  "type": "string",
                  "description": "domain of the client"
                },
                "subscription_details": {
                  "type": "array",
                  "description": "List of subscription details to be added",
                  "items": {
                    "type": "object",
                    "properties": {
                      "start_date": {
                        "type": "string",
                        "description": "Start date of the subscription (YYYY-MM-DD)"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "End date of the subscription (YYYY-MM-DD)"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Please contact administrator"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [ "Login Routes" ],
        "summary": "User Login",
        "description": "Authenticate a user and generate an access token.",
        "consumes": [ "application/json" ],
        "parameters": [
          {
            "in": "body",
            "name": "user_credentials",
            "description": "User's credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "client_domain": {
                  "type": "string",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "client_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "token": {
                  "type": "string",
                  "description": "JWT access token"
                },
                "message": {
                  "type": "string"
                },
                "status_code": {
                  "type": "integer"
                }
              }
            }
          },
          "201": {
            "description": "User not found/Invalid password",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "User not found/Invalid password"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Please contact administrator"
                }
              }
            }
          }
        }
      }
    },
    "/reset_password": {
      "post": {
        "tags": [ "Login Routes" ],
        "summary": "Reset Password",
        "security": [ { "jwt": [] } ],
        "description": "Reset a user's password.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Password reset successful message"
                }
              }
            }
          },
          "201": {
            "description": "Password reset failed",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Could not change or reset the password"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization Header",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Missing Authorization Header"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Please contact administrator"
                }
              }
            }
          }
        }
      }
    },
    "/forgot_password": {
      "post": {
        "tags": [ "Login Routes" ],
        "summary": "Forgot Password",
        "description": "Generate a one-time password (OTP) for password reset.",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body for generating OTP",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "User's email address"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP generated",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "OTP generated successfully message"
                }
              }
            }
          },
          "201": {
            "description": "Invalid input/User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating invalid input/User not found"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/verify_otp": {
      "post": {
        "tags": [ "Login Routes" ],
        "summary": "Verify OTP",
        "description": "Verify a one-time password (OTP) for password reset.",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body for OTP verification",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "User's email address"
                },
                "otp": {
                  "type": "string",
                  "description": "One-time password (OTP)"
                },
                "new_password": {
                  "type": "string",
                  "description": "new password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password change successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Password change successful message"
                }
              }
            }
          },
          "201": {
            "description": "User not found/Invalid OTP/OTP expired",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error messages for User not found/Invalid OTP/OTP expired"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/change_password": {
      "post": {
        "tags": [ "Login Routes" ],
        "summary": "Change Password",
        "security": [ { "jwt": [] } ],
        "description": "Change a user's password.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request body for changing the password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "current_password": {
                  "type": "string",
                  "description": "User's current password"
                },
                "new_password": {
                  "type": "string",
                  "description": "User's new password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password change successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Password change successful message"
                }
              }
            }
          },
          "201": {
            "description": "User not found/Invalid password/Invalid input/Could not change or reset the password",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Invalid input/Invalid password/User not found/Could not change or reset the password message"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/create_product_admin_for_development": {
      "post": {
        "tags": [ "Login Routes" ],
        "summary": "Create product-admin user",
        "description": "Creates a new product-admin user for initial setup in development purpose.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request body for creating new product-admin for initial setup",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name of the product-admin user"
                },
                "phone": {
                  "type": "string",
                  "description": "phone number"
                },
                "email": {
                  "type": "string",
                  "description": "product-admin mail id"
                },
                "password": {
                  "type": "string",
                  "description": "new password for product-admin"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "product-admin user added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "product-admin user added successfully"
                }
              }
            }
          },
          "201": {
            "description": "User exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Please contact administrator"
                }
              }
            }
          }
        }
      }
    },

    "/logout": {
      "post": {
        "tags": [ "Login Routes" ],
        "summary": "Logout",
        "security": [ { "jwt": [] } ],
        "description": "Logout the user and invalidate the JWT token.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Logout successful"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Please contact administrator"
                }
              }
            }
          }
        }
      }

    },
    "/save_client_details": {
      "post": {
        "tags": [ "Client Routes" ],
        "summary": "Add/Update Client Details",
        "security": [ { "jwt": [] } ],
        "description": "Add/Update details for a new client.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding/updating client details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "client_id of the client(required only for update)",
                  "required": false
                },
                "client_name": {
                  "type": "string",
                  "description": "Name of the client",
                  "minLength": 1
                },
                "client_address": {
                  "type": "string",
                  "description": "Address of the client"
                },
                "contact_person": {
                  "type": "string",
                  "description": "Name of the contact person"
                },
                "email": {
                  "type": "string",
                  "description": "Contact email of the client"
                },
                "phone": {
                  "type": "string",
                  "description": "Contact number of the client"
                },
                "api_url": {
                  "type": "string",
                  "description": "application url of the client"
                },
                "domain": {
                  "type": "string",
                  "description": "domain of the client"
                },
                "status": {
                  "type": "string",
                  "enum": [ "active", "inactive" ],
                  "description": "status of client"
                },
                "subscription_details": {
                  "type": "array",
                  "description": "List of subscription details to be added(no need for update)",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "start_date": {
                        "type": "string",
                        "description": "Start date of the subscription (YYYY-MM-DD)"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "End date of the subscription (YYYY-MM-DD)"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client details saved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating client addition/updation"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/add_subscriptions": {
      "post": {
        "tags": [ "Client Routes" ],
        "summary": "Add Subscriptions for an Existing Client",
        "security": [ { "jwt": [] } ],
        "description": "Add subscriptions for an existing client without replacing existing subscriptions.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding subscriptions",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique identifier of the existing client"
                },
                "subscription_details": {
                  "type": "array",
                  "description": "List of subscription details to be added",
                  "items": {
                    "type": "object",
                    "properties": {
                      "start_date": {
                        "type": "string",
                        "description": "Start date of the subscription (YYYY-MM-DD)"
                      },
                      "end_date": {
                        "type": "string",
                        "description": "End date of the subscription (YYYY-MM-DD)"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating subscription addition"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_client_details": {
      "post": {
        "tags": [ "Client Routes" ],
        "summary": "Delete Client Details",
        "security": [ { "jwt": [] } ],
        "description": "Delete details for an existing client.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for deleting client details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "client_id of the client to delete"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating client deletion"
                }
              }
            }
          },
          "201": {
            "description": "Client_id is missing in the request/Only admin can delete clients/Client_id does not exist/Client already deleted",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating Client_id is missing in the request/Only admin can delete clients/Client_id does not exist/Client already deleted"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_client_details": {
      "post": {
        "tags": [ "Client Routes" ],
        "summary": "Get Client Details",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve details of clients.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching client details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field"
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search for clients based on a specific keyword(optional)"
                },
                "_id": {
                  "type": "string",
                  "description": "Client ID for filtering (optional)",
                  "optional": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "client_name": {
                        "type": "string",
                        "description": "Client name"
                      },
                      "client_address": {
                        "type": "string",
                        "description": "Client address"
                      },
                      "status": {
                        "type": "string",
                        "description": "Client status"
                      },
                      "email": {
                        "type": "string",
                        "description": "Contact email"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Contact number"
                      },
                      "contact_person": {
                        "type": "string",
                        "description": "Contact person"
                      },
                      "_id": {
                        "type": "string",
                        "description": "Client ID"
                      },
                      "created_by": {
                        "type": "string",
                        "description": "created_by"
                      },
                      "created_on": {
                        "type": "string",
                        "description": "created_by"
                      }
                    }
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Only admin can view client details",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/save_user": {
      "post": {
        "tags": [ "User Routes" ],
        "summary": "Add/update User Details",
        "security": [ { "jwt": [] } ],
        "description": "Add/update a user with the provided details.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "user_data",
            "description": "User data to add/update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "User's unique ID(needed only in case of update)",
                  "required": false
                },
                "email": {
                  "type": "string",
                  "description": "User's email"
                },
                "name": {
                  "type": "string",
                  "description": "User's name"
                },
                "role": {
                  "type": "string",
                  "description": "User's role (product-user, admin, user)"
                },
                "phone": {
                  "type": "string",
                  "description": "phone number"
                },
                "status": {
                  "type": "string",
                  "description": "User's status (active, inactive, etc.)",
                  "enum": [ "active", "inactive" ]
                },
                "photo_id": {
                  "type": "string",
                  "description": "_id of the attachment(Optional)",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Saved user successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating the user insertion/updation"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_user": {
      "post": {
        "tags": [ "User Routes" ],
        "summary": "Delete User",
        "security": [ { "jwt": [] } ],
        "description": "Delete an existing user.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "user_data",
            "description": "User data to delete",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "User's unique ID"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating the user deletion"
                }
              }
            }
          },
          "201": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating _id is missing in the request/Cannot delete user details/user id doesnt exist/User already inactive/No data found"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_user_list": {
      "post": {
        "tags": [ "User Routes" ],
        "summary": "Get User List",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve a list of users based on the provided filters.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "object",
                  "description": "Retrieved user data"
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Cannot view other users",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating cannot view other users"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/upload_user_from_excel": {
      "post": {
        "tags": [ "User Routes" ],
        "summary": "upload user details  ",
        "security": [ { "jwt": [] } ],
        "description": "upload user details from excel",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "description": "Excel file containing user details",
            "required": true
          }
        ],
        "responses": {

          "200": {
            "description": "Data uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 14
                        },
                        "data": {
                          "type": "object",
                          "example": {
                            "0": "No update required for the 65f1d70ff0808abe8628a8e1",
                            "3": "f'Null or empty value found in document at index 3 for key columnname'",
                            "1": "file_name already exist in the db for the _id 65f1d70ff0808abe8628a8e1",
                            "2": "updated successfully for the _id 65f98eff32a61d2b782bc067",
                            "4": "inserted successfully and generated _id is 65f1d70ff0808abe8628a8e1"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Data retrieved successfully"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "status_code": {
                      "type": "integer",
                      "example": "200,201"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/send_email": {
      "post": {
        "tags": [ "Email Routes" ],
        "summary": "Send Email with Attachments and store info",
        "security": [ { "jwt": [] } ],
        "description": "Send an email with attachments and store email details in MongoDB",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "name": "to",
            "in": "formData",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "email"
              }
            },
            "description": "Recipient email addresses",
            "required": true
          },
          {
            "name": "subject",
            "in": "formData",
            "type": "string",
            "description": "Email subject",
            "required": true
          },
          {
            "name": "text",
            "in": "formData",
            "type": "string",
            "description": "Email content",
            "required": true
          },
          {
            "name": "html",
            "in": "formData",
            "type": "string",
            "description": "Email content in html",
            "required": true
          },
          {
            "name": "attachments",
            "in": "formData",
            "type": "array",
            "description": "attachments",
            "required": false,
            "items": {
              "type": "file"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent and details stored successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating the email info insertion"
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "success status code 200"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/search_text_in_document": {
      "post": {
        "tags": [
          "Model Routes"
        ],
        "summary": "Search Text in a folder of documents (.docx)",
        "description": "Text Search in a list of documents",
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "folder_name",
            "type": "string",
            "description": "Folder of the search files",
            "required": true
          },
          {
            "name": "search_text",
            "type": "string",
            "description": "Text to be searched",
            "required": true
          }

        ],
        "responses": {

          "200": {
            "description": "Files retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "file_list": { "type": "array" },
                    "count": { "type": "integer" }
                  },
                  "description": "list of file names which has search text"
                },
                "message": {
                  "type": "string",
                  "description": "Success message"
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "success status code 200"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/save_train_dataset": {
      "post": {
        "tags": [
          "TrainDataset Routes"
        ],
        "summary": "Save Train Dataset",
        "description": "Endpoint to save a dataset",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request_data",
            "description": "Entity data to save",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "entity_data_set": {
                  "type": "object",
                  "description": "Dynamic properties for entity data set"
                },
                "file_id": {
                  "type": "string",
                  "description": "The ID of the file"
                }
              },
              "required": [ "entity_data_set", "file_id" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string" },
                "status": { "type": "string" }
              }
            }
          },
          "201": {
            "description": "Error while saving file or entities"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/add_group_list": {
      "post": {
        "tags": [ "MyList Routes" ],
        "summary": "Add List API",
        "security": [ { "jwt": [] } ],
        "description": "Add a new list group to the database if it doesn't already exist",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "list_data",
            "description": "list_data to add",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list_name": {
                  "type": "string",
                  "description": "Name of the list to add"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating the list creation"
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "status code for success 200"
                }
              }
            }
          },
          "201": {
            "description": "list name not provided/list name already exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating list name not provided/list name already exists"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/rename_group_list": {
      "post": {
        "tags": [ "MyList Routes" ],
        "summary": "Rename List API",
        "security": [ { "jwt": [] } ],
        "description": "Rename an existing list in the database",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "list_data",
            "description": "Data required to rename the list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list_name": {
                  "type": "string",
                  "description": "New name of the list"
                },
                "_id": {
                  "type": "string",
                  "description": "ID of the list to rename"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List renamed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating the list creation"
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "status code for success 200"
                }
              }
            }
          },
          "201": {
            "description": "list_name or list_id not provided / List not found / Could not rename list",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating list_name or list_id not provided / List not found / Could not rename list"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_group_list": {
      "post": {
        "tags": [ "MyList Routes" ],
        "summary": "Delete List API",
        "security": [ { "jwt": [] } ],
        "description": "Delete an existing list from the database",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "list_data",
            "description": "list of _id of the groups to be deleted",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "IDs of the lists to delete"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating the list creation"
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "status code for success 200"
                }
              }
            }
          },
          "201": {
            "description": "list_id not provided / List not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating list_id not provided / List not found"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_group_list": {
      "post": {
        "tags": [ "MyList Routes" ],
        "summary": "View List Info",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve list group details with optional search and filter parameters.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "request_data",
            "description": "Request body containing optional search and filter parameters.",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of results per page. ",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "enum": [ "asc", "desc" ],
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "enum": [ "_id", "list_name", "created_by", "created_on", "updated_by", "updated_on" ],
                  "description": "Field to sort by. Default is '_id'."
                },
                "search_by": {
                  "type": "string",
                  "description": "Search for group based on a specific keyword(optional)"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array"
                      }
                    }
                  }
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list details.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "list_id": {
                        "type": "string",
                        "description": "Unique identifier for the list group."
                      },
                      "list_name": {
                        "type": "string",
                        "description": "name of the list."
                      },
                      "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "description": "created date of the list"
                      },
                      "created_by": {
                        "type": "string",
                        "description": "created_by"
                      },
                      "updated_on": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the email was sent."
                      },
                      "updated_by": {
                        "type": "string",
                        "description": "updated_by"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating the success of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "Success status."
                },
                "status_code": {
                  "type": "integer",
                  "description": "Success status code."
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/add_cv_list_to_group": {
      "post": {
        "tags": [ "MyList Routes" ],
        "summary": "Add Candidate List to Group",
        "description": "Adds a list of CVs to a group in the database",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "list_data",
            "description": "list_data to add",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list_id": {
                  "type": "string",
                  "description": "list_id of the list group"
                },
                "candidate_id": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of Candidate IDs to add"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "file list added to group successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message "
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "status code for success 200"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/remove_cv_list_from_group": {
      "post": {
        "tags": [ "MyList Routes" ],
        "summary": "Remove CV List from Group",
        "security": [ { "jwt": [] } ],
        "description": "Removes a list of Candidates from a group in the database",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "list_data",
            "description": "Data required to remove candidates from the list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list_id": {
                  "type": "string",
                  "description": "ID of the list "
                },
                "candidate_id": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of candidate IDs to remove"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "removed from group successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating the removal of ids from list"
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "status code for success 200"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_cv_group_list": {
      "post": {
        "tags": [ "MyList Routes" ],
        "summary": "Retrieve candidate group list",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve candidate group list",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_data",
            "description": "Request body containing optional search and filter parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list_id": {
                  "type": "string"
                },
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of results per page. ",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "enum": [ "asc", "desc" ],
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "enum": [ "_id", "list_id", "list_name", "candidate_id", "email" ],
                  "description": "Field to sort by. Default is 'list_id'."
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with email history details.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Unique identifier for the email."
                      },
                      "list_id": {
                        "type": "string"
                      },
                      "list_name": {
                        "type": "string"
                      },
                      "candidate_info": {
                        "type": "array"
                      }
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating the success of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "Success status."
                },
                "status_code": {
                  "type": "integer",
                  "description": "Success status code."
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/view_mail_history": {
      "post": {
        "tags": [ "Email Routes" ],
        "summary": "View Email Info",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve email history details with optional search and filter parameters.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching company details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true",
                  "required": false
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1,
                  "required": false
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1,
                  "required": false
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field",
                  "required": false
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'",
                  "required": false
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search for email history based on a specific keyword(optional)",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with email history details.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Unique identifier for the email."
                      },
                      "attachments": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Paths to attachments."
                        }
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the email."
                      },
                      "from": {
                        "type": "string",
                        "description": "Sender's email address."
                      },
                      "send_to": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "Recipient email addresses."
                        }
                      },
                      "sent_on": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the email was sent."
                      },
                      "subject": {
                        "type": "string",
                        "description": "Subject of the email."
                      }
                    }
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Message indicating the success of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "Success status."
                },
                "status_code": {
                  "type": "integer",
                  "description": "Success status code."
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/upsert_role": {
      "post": {
        "tags": [ "UI Template Routes" ],
        "summary": "Add or Update Roles ",
        "security": [ { "jwt": [] } ],
        "description": "Add or Update roles.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding and updating roles",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Name of the role",
                  "minLength": 1
                },
                "name": {
                  "type": "string",
                  "description": "Name of the role",
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "description": "description of the role"
                },
                "menu_ids": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "created_by": {
                  "type": "string",
                  "description": "created time"
                },
                "updated_by": {
                  "type": "string",
                  "description": "updated time"
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Roles added successfully/Roles updated successfully/",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating role addition"
                }
              }
            }
          },
          "201": {
            "description": "Role id doesnot exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating Only admin can add clients/client_name is missing/Client name already available/Could not add client"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/upsert_widget": {
      "post": {
        "tags": [ "UI Template Routes" ],
        "summary": "Add or Update widgets ",
        "security": [ { "jwt": [] } ],
        "description": "Add or widgets roles.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding and updating widgets",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Name of the role",
                  "minLength": 1
                },
                "name": {
                  "type": "string",
                  "description": "Name of the widget",
                  "minLength": 1
                },
                "info": {
                  "type": "string",
                  "description": "information of the widget",
                  "minLength": 1
                },
                "type": {
                  "type": "string",
                  "description": "type of the widget",
                  "minLength": 1
                },
                "file_name": {
                  "type": "string",
                  "description": "file name of the widget",
                  "minLength": 1
                },
                "class_name": {
                  "type": "string",
                  "description": "class name of the widget",
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "description": "description of the widget"
                },
                "created_by": {
                  "type": "string",
                  "description": "created by"
                },
                "updated_by": {
                  "type": "string",
                  "description": "updated person"
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "widgets added successfully/widgets updated successfully/",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating widget addition or updation"
                }
              }
            }
          },
          "201": {
            "description": "widget id doesnot exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "widget id doesnot exists"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/upsert_page": {
      "post": {
        "tags": [ "UI Template Routes" ],
        "summary": "Add or Update pages ",
        "security": [ { "jwt": [] } ],
        "description": "Add or update pages.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding and updating pages",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Name of the role",
                  "minLength": 1
                },
                "name": {
                  "type": "string",
                  "description": "Name of the page",
                  "minLength": 1
                },
                "info": {
                  "type": "string",
                  "description": "information of the page",
                  "minLength": 1
                },
                "class_name": {
                  "type": "string",
                  "description": "class name of the page",
                  "minLength": 1
                },
                "description": {
                  "type": "string",
                  "description": "description of the page"
                },
                "router_link": {
                  "type": "string",
                  "description": "description of the page"
                },
                "widget_ids": {
                  "type": "array",
                  "items": { "type": "string" }
                },

                "created_by": {
                  "type": "string",
                  "description": "created by"
                },

                "updated_by": {
                  "type": "string",
                  "description": "updated person"
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "pages added successfully/pages updated successfully/",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating page addition or updation"
                }
              }
            }
          },
          "201": {
            "description": "page id doesnot exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "page id doesnot exists"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/upsert_sub_menu": {
      "post": {
        "tags": [ "UI Template Routes" ],
        "summary": "Add or Update sub_menu ",
        "security": [ { "jwt": [] } ],
        "description": "Add or Update sub_menu.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding and updating sub_menu",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id of the sub_menu",
                  "minLength": 1
                },
                "name": {
                  "type": "string",
                  "description": "Name of the sub_menu",
                  "minLength": 1
                },
                "icon": {
                  "type": "string",
                  "description": "icon of the sub_menu"
                },
                "page_id": {
                  "type": "string",
                  "description": "page_id linked to the sub_menu"
                },
                "created_by": {
                  "type": "string",
                  "description": "created by"
                },
                "updated_by": {
                  "type": "string",
                  "description": "updated person"
                },
                "page_link": {
                  "type": "string",
                  "description": "router_link of the page linked"
                },
                "parent_menu": {
                  "type": "array",
                  "description": "parent_menus of the sub_menu"
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "sub_menu added successfully/sub_menu updated successfully/",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating sub_menu addition"
                }
              }
            }
          },
          "201": {
            "description": "sub_menu id doesnot exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating Only admin can add clients/client_name is missing/Client name already available/Could not add client"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/upsert_menu": {
      "post": {
        "tags": [ "UI Template Routes" ],
        "summary": "upsert Menu ",
        "security": [ { "jwt": [] } ],
        "description": "upsert menu.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for updating  menus",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id  of the menu",
                  "minLength": 1
                },
                "name": {
                  "type": "string",
                  "description": "Name of the menu",
                  "minLength": 1
                },
                "icon": {
                  "type": "string",
                  "description": "icon of the menu",
                  "minLength": 1
                },
                "is_sub_menu": {
                  "type": "boolean",
                  "description": "True/False"
                },
                "sub_menu_ids": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "page_id": {
                  "type": "string",
                  "description": "page_id linked to the menu",
                  "minLength": 1
                },

                "created_by": {
                  "type": "string",
                  "description": "created by"
                },
                "updated_by": {
                  "type": "string",
                  "description": "updated person"
                },
                "page_link": {
                  "type": "string",
                  "description": "router_link of the page linked"
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "menu added/updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating menu updation "
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_role": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Delete roles ",
        "description": "Delete configuration for an existing role.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id of the role"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "role id does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/delete_widget": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Delete widgets ",
        "description": "Delete configuration for an existing widget.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id of the widget"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "widget id does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/delete_page": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Delete pages ",
        "description": "Delete configuration for an existing page.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id of the page"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "page id does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/delete_menu": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Delete menus ",
        "description": "Delete configuration for an existing menus.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id of the menu"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "menu id does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/delete_sub_menu": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Delete sub menus ",
        "description": "Delete configuration for an existing sub menus.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id of the sub_menu"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "sub_menu id does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/delete_ui_template": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Delete any template of UI ",
        "description": "Delete any template of UI.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Delete any template of UI",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "template_type": {
                  "type": "string",
                  "description": "any template name"
                },
                "_id": {
                  "type": "string",
                  "description": "id"

                }
              }
            }

          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "id doesnot exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/get_roles": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Get all the roles",
        "description": "Retrieve roles  details",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }

              }
            }
          }

        ],

        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "menu": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "string"
                                },
                                "icon": {
                                  "type": "string"
                                },
                                "is_sub_menu": {
                                  "type": "boolean"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "page": {
                                  "type": "object",
                                  "properties": {
                                    "_id": {
                                      "type": "string"
                                    },
                                    "class_name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "info": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "router_link": {
                                      "type": "string"
                                    },
                                    "widget": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "string"
                                          },
                                          "class_name": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          },
                                          "file_name": {
                                            "type": "string"
                                          },
                                          "info": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "sub_menu": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "_id": {
                                        "type": "string"
                                      },
                                      "icon": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "string"
                                          },
                                          "class_name": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          },
                                          "info": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "router_link": {
                                            "type": "string"
                                          },
                                          "widget": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "_id": {
                                                  "type": "string"
                                                },
                                                "class_name": {
                                                  "type": "string"
                                                },
                                                "description": {
                                                  "type": "string"
                                                },
                                                "file_name": {
                                                  "type": "string"
                                                },
                                                "info": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "status_code": {
                  "type": "integer"
                }
              }
            }

          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "all other functional errors"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/get_menus": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Get all the menus",
        "description": "Retrieve menus  details",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }

              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string"
                          },
                          "is_sub_menu": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "page": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "class_name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "info": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "router_link": {
                                "type": "string"
                              },
                              "widget": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "_id": {
                                      "type": "string"
                                    },
                                    "class_name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "file_name": {
                                      "type": "string"
                                    },
                                    "info": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "sub_menu": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "string"
                                },
                                "icon": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "page": {
                                  "type": "object",
                                  "properties": {
                                    "_id": {
                                      "type": "string"
                                    },
                                    "class_name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "info": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "router_link": {
                                      "type": "string"
                                    },
                                    "widget": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "_id": {
                                            "type": "string"
                                          },
                                          "class_name": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          },
                                          "file_name": {
                                            "type": "string"
                                          },
                                          "info": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "status_code": {
                  "type": "integer"
                }
              }
            }

          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "sub_menu id does not exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/get_sub_menus": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Get all the sub_menus",
        "description": "Retrieve sub_menus  details",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }

              }
            }
          }

        ],
        "responses": {

          "200": {
            "description": "Data retrieved successfully",

            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "page": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string"
                              },
                              "class_name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "info": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "router_link": {
                                "type": "string"
                              },
                              "widget": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "_id": {
                                      "type": "string"
                                    },
                                    "class_name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "file_name": {
                                      "type": "string"
                                    },
                                    "info": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "status_code": {
                  "type": "integer"
                }
              }
            }

          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "all functional errors"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/get_pages": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Get all the pages",
        "description": "Retrieve page details",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }

              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",

            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "class_name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "router_link": {
                            "type": "string"
                          },
                          "widget": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "type": "string"
                                },
                                "class_name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "file_name": {
                                  "type": "string"
                                },
                                "info": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "status_code": {
                  "type": "integer"
                }
              }
            }

          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "all functional errors"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/get_widgets": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "Get all the widgets",
        "description": "Retrieve widget details",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }

              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "class_name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "file_name": {
                            "type": "string"
                          },
                          "info": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "status_code": {
                  "type": "integer"
                }
              }
            }

          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "all functional errors"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/upload_excel_data": {
      "post": {
        "tags": [
          "UI Template Routes"
        ],
        "summary": "upload document into MongoDb(depracated)",
        "description": "upload uitemplate info into MongoDb(depracated)",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "type": "array",
            "description": "input ui_template gadget",
            "required": true,
            "items": {
              "type": "file"
            }
          },
          {
            "name": "type",
            "in": "formData",
            "type": "string",
            "description": "type of ui_template_data",
            "required": true,
            "items": {
              "type": "Text"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ui_template uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message indicating success"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Please contact administrator"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create_feedback": {
      "post": {
        "tags": [
          "Feedback Routes"
        ],
        "summary": "Create Feedback",
        "security": [ { "jwt": [] } ],
        "description": "Create Feedback",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "feedback_data",
            "description": "Request data for feedback creation",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "integer"
                },
                "feedback_type": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "attachment": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "file_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "feedback create successfully",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "status_code": {
                  "type": "integer"
                }
              }
            }
          },
          "201": {
            "description": "failed to create feedback",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "failed to create feedback"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Please contact administrator"
                }
              }
            }
          }
        }
      }
    },
    "/upload_attachment": {
      "post": {
        "tags": [ "Feedback Routes" ],
        "summary": "Upload attachment",
        "security": [ { "jwt": [] } ],
        "consumes": [ "multipart/form-data" ],
        "description": "Upload attachment",
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "type": "array",
            "description": "Upload multiple files containing attachment details",
            "required": true,
            "items": {
              "type": "file"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Upload attachment successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Upload attachment successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_feedback_list": {
      "post": {
        "tags": [
          "Feedback Routes"
        ],
        "summary": "Get feedback list",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve a list of feedback",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for user list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination"
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page"
                },
                "sort_by": {
                  "type": "string",
                  "enum": [ "asc", "desc" ],
                  "description": "Field to sort by"
                },
                "order_by": {
                  "type": "string",
                  "enum": [ "_id", "rating", "feedback_type", "content", "file_name", "created_by", "created_on", "updated_by", "updated_on" ],
                  "description": "Order by (asc/desc)"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Upload attachment successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Upload attachment successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_filters_for_collection": {
      "post": {
        "tags": [
          "Dropdown Routes"
        ],
        "summary": "Get distinct values for the requested or configured attribute to use filters for the given collection",
        "security": [ { "jwt": [] } ],
        "description": "Get distinct values for the requested or configured attribute to use filters for the given collection",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "req_data",
            "description": "collection_name*-collection name from which you want distinct values for the fields (field_name -  optional key)",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "collection_name": {
                  "type": "string",
                  "description": "Collection name in the db",
                  "example": "CANDIDATE_DETAILS"
                },
                "field_name": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "field names to extract the distinct values",
                    "example": "email,primary_skills"
                  }
                }
              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Retrieve a list of dropdown information successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Retrieve a list of dropdown information successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/dropdown_list": {
      "post": {
        "tags": [
          "Dropdown Routes"
        ],
        "summary": "Get all dropdown information from drop-down list collection",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve all dropdown information, and the key value is given as any one of the following:ats_status,candidate_choice, cities, client_source, company, company2, country, course, course_name, disability, education_mode,gender, hold_reson, industry, interview_level, job_level, job_priority, job_type, mode, position_type, rate_slat, religion, req_classification, state, status, title, requirement_type, interview_name, functional_area,marital_status, spouse_status, leaving_reson, break_reson, currency, survey_request, offerd_type, interview_mode, pref_shift_timing",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for dropdown list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key value"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of results per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "enum": [ "asc", "desc" ],
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "enum": [ "_id", "value" ],
                  "description": "Sort by field"
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Retrieve a list of dropdown information successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Retrieve a list of dropdown information successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/save_activity": {
      "post": {
        "tags": [
          "Activity Routes"
        ],
        "summary": "Create Activity",
        "security": [ { "jwt": [] } ],
        "description": "Create Activity",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "activity_data",
            "description": "Request data for activity creation",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "required": false
                },
                "subject": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "date_time": {
                  "type": "string"
                },
                "duration_minutes": {
                  "type": "integer",
                  "required": false
                },
                "comments": {
                  "type": "string"
                },
                "job_id": {
                  "type": "string",
                  "required": false
                },
                "company_id": {
                  "type": "string",
                  "required": false
                },
                "candidate_id": {
                  "type": "string",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "activity saved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "status_code": {
                  "type": "integer"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Please contact administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_activity": {
      "post": {
        "tags": [ "Activity Routes" ],
        "summary": "Delete activity API",
        "security": [ { "jwt": [] } ],
        "description": "Delete an existing activity from the database",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "activity_data",
            "description": "Data required to delete the activity",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "ID of the activity to be deleted"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating deletion"
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "status code for success 200"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_all_activity": {
      "post": {
        "tags": [
          "Activity Routes"
        ],
        "summary": "Get all activity information from activity details collection",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve all activity information ",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for activity list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of results per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "enum": [ "asc", "desc" ],
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "enum": [ "_id", "subject", "type", "date_time", "duration_minutes", "job_id", "candidate_id", "company_id", "comments" ],
                  "description": "Sort by field"
                },
                "search_by": {
                  "type": "string",
                  "description": "Search by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Retrieve a list of activity information successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Retrieve a list of activity information successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_candidates": {
      "post": {
        "tags": [
          "Candidate Routes"
        ],
        "summary": "Get all candidates information from candidates details collection",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve all candidates information ",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for candidate list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of results per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "Retrieve a list of candidate information successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Retrieve a list of candidate information successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_candidates": {
      "post": {
        "tags": [ "Candidate Routes" ],
        "summary": "Delete candidates API",
        "security": [ { "jwt": [] } ],
        "description": "Delete an existing list from the database",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "delete candidate data",
            "description": "Data required to delete the list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id_list": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "IDs of the candidates to be deleted"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "candidates deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating list deletion"
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "status code for success 200"
                }
              }
            }
          },
          "201": {
            "description": "list_id not provided / List not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating list_id not provided / List not found"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/upload_excel_candidates": {
      "post": {
        "tags": [ "Candidate Routes" ],
        "summary": "Upload excel for candidates",
        "security": [ { "jwt": [] } ],
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Upload excel",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "description": "Upload a single file containing excel details",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Upload excel successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Upload excel successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/search_candidates": {
      "post": {
        "tags": [
          "Candidate Routes"
        ],
        "summary": "search candidates information from candidates details collection",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve search candidates information ",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },

          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for candidate list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "filter_by": {
                  "type": "object",
                  "description": "Filter criteria (optional)",
                  "properties": {
                    "column_name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve a search candidate information successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Search of candidate information retrieve successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/save_candidate": {
      "post": {
        "tags": [
          "Candidate Routes"
        ],
        "summary": "Save candidate details",
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "Save candidate details",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for candidate list filtering",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "insert_from": {
                  "type": "string",
                  "example": "Web or Doc"
                },
                "notes": {
                  "type": "string",
                  "example": "Notes"
                },
                "key": {
                  "type": "string",
                  "example": "CANDIDATE_DETAILS"
                },

                "email": {
                  "type": "string",
                  "example": "johnl.doe@example.com"
                },
                "title": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "middle_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "date_of_birth": {
                  "type": "string",
                  "example": "1990-05-15T00:00:00.000Z"
                },
                "age": {
                  "type": "integer",
                  "example": 31
                },
                "current_location": {
                  "type": "string",
                  "example": "New York"
                },
                "primary_contact_number": {
                  "type": "string",
                  "example": "1234567890"
                },
                "alternate_contact_number": {
                  "type": "string",
                  "example": "9876543210"
                },
                "linkedin_profile": {
                  "type": "string",
                  "example": "https://www.linkedin.com/in/johndoe"
                },
                "gender": {
                  "type": "string",
                  "example": "Male"
                },
                "nationality": {
                  "type": "string",
                  "example": "American"
                },
                "religion": {
                  "type": "string",
                  "example": "Christian"
                },
                "languages_known_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "English",
                    "Spanish"
                  ]
                },
                "person_with_disability": {
                  "type": "boolean",
                  "example": false
                },
                "nature_of_disability": {
                  "type": "string",
                  "example": "NA"
                },
                "rural_or_urban": {
                  "type": "string",
                  "example": "rural"
                },
                "marital_status": {
                  "type": "string",
                  "example": "Single"
                },
                "spouse_status": {
                  "type": "boolean",
                  "example": true
                },
                "parental_status": {
                  "type": "boolean",
                  "example": true
                },
                "caregiver_status": {
                  "type": "boolean",
                  "example": true
                },
                "ctc_type": {
                  "type": "string",
                  "example": "Annual"
                },
                "current_ctc": {
                  "type": "integer",
                  "example": 900000
                },
                "expected_ctc": {
                  "type": "integer",
                  "example": 1500000
                },
                "family_income": {
                  "type": "integer",
                  "example": 2000000
                },
                "expected_ctc_type": {
                  "type": "string",
                  "example": "Annual"
                },
                "educational_details_list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ed_id": {
                        "type": "int",
                        "example": 1
                      },
                      "ed_course": {
                        "type": "string",
                        "example": "Bachelor's"
                      },
                      "ed_course_name": {
                        "type": "string",
                        "example": "Computer Science"
                      },
                      "ed_institute": {
                        "type": "string",
                        "example": "XYZ University"
                      },
                      "ed_completion_year": {
                        "type": "integer",
                        "example": 2018
                      },
                      "ed_specification": {
                        "type": "string",
                        "example": "Full-Time"
                      },
                      "ed_mode_of_education": {
                        "type": "string",
                        "example": "Online"
                      },
                      "ed_percentage": {
                        "type": "float",
                        "example": 100.0
                      }
                    }
                  }
                },
                "certification_details_list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cd_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "cd_course": {
                        "type": "string",
                        "example": "Bachelor's"
                      },
                      "cd_course_name": {
                        "type": "string",
                        "example": "Computer Science"
                      },
                      "cd_institute": {
                        "type": "string",
                        "example": "XYZ University"
                      },
                      "cd_completion_year": {
                        "type": "integer",
                        "example": 2018
                      },
                      "cd_specification": {
                        "type": "string",
                        "example": "Full-Time"
                      },
                      "cd_mode_of_education": {
                        "type": "string",
                        "example": "Online"
                      }
                    }
                  }
                },

                "relevant_experience": {
                  "type": "integer",
                  "example": 3
                },
                "total_job_changed": {
                  "type": "integer",
                  "example": 2
                },
                "cl_country": {
                  "type": "string",
                  "example": "USA"
                },
                "cl_state": {
                  "type": "string",
                  "example": "Texas"
                },
                "cl_city": {
                  "type": "string",
                  "example": "Dallas"
                },
                "pl_country": {
                  "type": "string",
                  "example": "USA"
                },
                "pl_state": {
                  "type": "string",
                  "example": "CA"
                },
                "pl_city": {
                  "type": "string",
                  "example": "Los Angeles"
                },
                "prl_country": {
                  "type": "string",
                  "example": "USA"
                },
                "prl_state": {
                  "type": "string",
                  "example": "Texas"
                },
                "prl_city": {
                  "type": "string",
                  "example": "Dallas"
                },
                "total_experience_year": {

                  "type": "integer",
                  "example": 2019
                },
                "total_experience_months": {
                  "type": "integer",
                  "example": 3
                },
                "cwe_company_name": {
                  "type": "string",
                  "example": "ABC Company"
                },
                "cwe_start_year": {
                  "type": "integer",
                  "example": 2019
                },
                "cwe_end_year": {
                  "type": "integer",
                  "example": 2020
                },
                "cwe_designation": {
                  "type": "string",
                  "example": "Software Engineer"
                },
                "cwe_level": {
                  "type": "string",
                  "example": "Senior"
                },
                "cwe_job_type": {
                  "type": "string",
                  "example": "Full-Time"
                },
                "cwe_industry": {
                  "type": "string",
                  "example": "IT"
                },
                "cwe_func_area": {
                  "type": "string",
                  "example": "Software"
                },
                "cwe_reason_for_leaving": {
                  "type": "string",
                  "example": "Sick"
                },
                "cwe_year_of_exp_year": {
                  "type": "integer",
                  "example": 2019
                },
                "cwe_year_of_exp_months": {
                  "type": "integer",
                  "example": 3
                },
                "previous_work_experience_list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pwe_company_name": {
                        "type": "string",
                        "example": "ABC Company"
                      },
                      "pwe_start_year": {
                        "type": "integer",
                        "example": 2019
                      },
                      "pwe_end_year": {
                        "type": "integer",
                        "example": 2020
                      },
                      "pwe_designation": {
                        "type": "string",
                        "example": "Software Engineer"
                      },
                      "pwe_level": {
                        "type": "string",
                        "example": "Senior"
                      },
                      "pwe_job_type": {
                        "type": "string",
                        "example": "Full-Time"
                      },
                      "pwe_industry": {
                        "type": "string",
                        "example": "IT"
                      },
                      "pwe_func_area": {
                        "type": "string",
                        "example": "Software"
                      },
                      "pwe_reason_for_leaving": {
                        "type": "string",
                        "example": "Sick"
                      },
                      "pwe_year_of_exp_year": {
                        "type": "integer",
                        "example": 2019
                      },
                      "pwe_year_of_exp_months": {
                        "type": "integer",
                        "example": 3
                      }
                    }
                  }
                },
                "passport_no": {
                  "type": "string",
                  "example": "1234987654"
                },
                "travel_int_exp": {
                  "type": "integer",
                  "example": 3
                },
                "travel_nat_exp": {
                  "type": "integer",
                  "example": 2
                },
                "onsite_experience_list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "country_visited": {
                        "type": "string",
                        "example": "USA"
                      },
                      "location": {
                        "type": "string",
                        "example": "Texas"
                      },
                      "visa_details": {
                        "type": "string",
                        "example": "H1B"
                      },
                      "visa_type": {
                        "type": "string",
                        "example": "H1B"
                      }
                    }
                  }
                },
                "primary_skills": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Java, C++, C, C#, Python"
                  }

                },
                "secondary_skills": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Java, C++, C, C#, Python"
                  }
                },
                "willing_to_relocate": {
                  "type": "boolean",
                  "example": true
                },
                "notice_period": {
                  "type": "string",
                  "example": "3 months"
                },
                "is_np_negotiable": {
                  "type": "boolean",
                  "example": true
                },
                "negotiable_period": {
                  "type": "integer",
                  "example": 3
                },
                "can_work_in_shifts": {
                  "type": "boolean",
                  "example": true
                },
                "pref_shift_timings": {
                  "type": "string",
                  "example": "9:00 AM - 5:00 PM"
                },
                "career_break": {
                  "type": "boolean",
                  "example": true
                },
                "photo": {
                  "type": "string",
                  "example": "https://example.com/photo.jpg"
                },
                "career_break_details_list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cbd_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "cbd_start_year": {
                        "type": "integer",
                        "example": 2019
                      },
                      "cbd_end_year": {
                        "type": "integer",
                        "example": 2020
                      },
                      "cbd_reason": {
                        "type": "string",
                        "example": "Sick"

                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save candidate details successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Candidate details saved successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/save_company": {
      "post": {
        "tags": [ "Company Routes" ],
        "summary": "Add/update Company Details",
        "security": [ { "jwt": [] } ],
        "description": "Add/update details for company.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding company details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "_id of the company to be updated(required for update)",
                  "required": false
                },
                "company_name": {
                  "type": "string",
                  "description": "Name of the company",
                  "minLength": 1
                },
                "company_type": {
                  "type": "string",
                  "description": "Type of thge company(MNC/Indian)",
                  "required": false
                },
                "sector_type_2": {
                  "type": "string",
                  "description": "type of sector",
                  "required": false
                },
                "company_status": {
                  "type": "string",
                  "description": "status of the company",
                  "enum": [ "active", "inactive" ],
                  "required": false
                },
                "company_turn_over": {
                  "type": "integer",
                  "description": "turn over of the company",
                  "required": false
                },
                "employee_count": {
                  "type": "integer",
                  "description": "employee count of the company",
                  "required": false
                },
                "email": {
                  "type": "string",
                  "description": "email of the company",
                  "required": false
                },
                "website": {
                  "type": "string",
                  "description": "website of the company",
                  "required": false
                },
                "industry": {
                  "type": "string",
                  "description": "industry to which the company belongs",
                  "required": false
                },
                "client_source": {
                  "type": "string",
                  "description": "client_source of the company",
                  "required": false
                },
                "source_name": {
                  "type": "string",
                  "description": "company source name",
                  "required": false
                },
                "general_notes": {
                  "type": "string",
                  "description": "notes",
                  "required": false
                },
                "office_details_list": {
                  "type": "array",
                  "description": "List of office details to be added",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "country": {
                        "type": "string",
                        "description": "country of the company office"
                      },
                      "state": {
                        "type": "string",
                        "description": "state of the company office"
                      },
                      "city": {
                        "type": "string",
                        "description": "city of the company office"
                      },
                      "pincode": {
                        "type": "string",
                        "description": "pincode of the company office"
                      },
                      "hq_location": {
                        "type": "boolean",
                        "description": "whether it is the hq_location of the company office"
                      },
                      "phone": {
                        "type": "string",
                        "description": "office phone number"
                      },
                      "office_email": {
                        "type": "string",
                        "description": "email of the company office"
                      }
                    }
                  }
                },
                "contact_list": {
                  "type": "array",
                  "description": "List of contacts to be added",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name of the contact"
                      },
                      "phone": {
                        "type": "string",
                        "description": "phone number of the contact"
                      },
                      "email": {
                        "type": "string",
                        "description": "email of the contact"
                      },
                      "comments": {
                        "type": "string",
                        "description": "other info about the contact"
                      }
                    }
                  }
                },
                "company_bio": {
                  "type": "string",
                  "description": "company description",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company details saved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating company addition/updation"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_company": {
      "post": {
        "tags": [ "Company Routes" ],
        "summary": "Get Company Details",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve details of companies.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching company details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true",
                  "required": false
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1,
                  "required": false
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1,
                  "required": false
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field",
                  "required": false
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'",
                  "required": false
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search for clients based on a specific keyword(optional)",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Only admin can view company details",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_company": {
      "post": {
        "tags": [ "Company Routes" ],
        "summary": "Delete Company Details",
        "security": [ { "jwt": [] } ],
        "description": "Delete details for an existing company.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for deleting company details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "_id of the company to be deleted"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Company deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating company deletion"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/save_job": {
      "post": {
        "tags": [
          "Job Routes"
        ],
        "summary": "Save job details and assign to a employee",
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "Save job details and assign to a employee",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for saving job details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "requirement_date": {
                  "type": "string",
                  "format": "date"
                },
                "requirement_type": {
                  "type": "string"
                },
                "company_name": {
                  "type": "string"
                },
                "contact_person": {
                  "type": "string"
                },
                "company_pitch": {
                  "type": "string"
                },
                "job_title": {
                  "type": "string"
                },
                "no_of_vacancies": {
                  "type": "integer"
                },
                "work_location": {
                  "type": "string"
                },
                "preferred_location": {
                  "type": "string"
                },
                "client_hiring_for": {
                  "type": "string"
                },
                "job_priority": {
                  "type": "string"
                },
                "industry": {
                  "type": "string"
                },
                "job_type": {
                  "type": "string"
                },
                "position_type": {
                  "type": "string"
                },
                "job_description": {
                  "type": "string"
                },
                "education": {
                  "type": "string"
                },
                "over_all_experience_from": {
                  "type": "integer"
                },
                "over_all_experience_to": {
                  "type": "integer"
                },
                "relevant_experience": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "primary_key_skills": {
                  "type": "string"
                },
                "secondary_key_skills": {
                  "type": "string"
                },
                "requirement_usp": {
                  "type": "string"
                },
                "salary_range_from": {
                  "type": "string"
                },
                "salary_range_to": {
                  "type": "string"
                },
                "notice_period": {
                  "type": "integer"
                },
                "age_from": {
                  "type": "integer"
                },
                "age_to": {
                  "type": "integer"
                },
                "rate_slab_type": {
                  "type": "string"
                },
                "bonus_components": {
                  "type": "string"
                },
                "candidate_choice": {
                  "type": "string"
                },
                "consider_hiring_ex_employees": {
                  "type": "string"
                },
                "no_poach_clause": {
                  "type": "string"
                },
                "NDA_employment_bond": {
                  "type": "string"
                },
                "appraisal_eligibility": {
                  "type": "string"
                },
                "work_timings": {
                  "type": "string"
                },
                "no_working_days_per_week": {
                  "type": "integer"
                },
                "transport_facility": {
                  "type": "string"
                },
                "req_classification": {
                  "type": "integer"
                },
                "last_date_to_share_CV": {
                  "type": "string",
                  "format": "date"
                },
                "assignee": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "is_job_active": {
                  "type": "boolean",
                  "default": true
                },
                "is_deleted": {
                  "type": "boolean",
                  "default": false
                },
                "desired_candidate_profile": {
                  "type": "string"
                },
                "target_company": {
                  "type": "string"
                },
                "_id": {
                  "type": "string"
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save job details successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "job details saved successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/map_candidate_to_job": {
      "post": {
        "tags": [
          "Job Routes"
        ],
        "summary": "map candidates to the job",
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "map candidates to the job",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for mapping candidate ids to the job",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "job_id": {
                  "type": "string"
                },
                "candidate_id": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "mapped candidate details successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "mapped candidate details successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_candidate_from_job": {
      "post": {
        "tags": [
          "Job Routes"
        ],
        "summary": "delete candidates to the job",
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "delete candidates to the job",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for deleting candidate ids to the job",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "job_id": {
                  "type": "string"
                },
                "candidate_id": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "deleted candidate details successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "deleted candidate details successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/update_candidate_status": {
      "post": {
        "tags": [
          "Job Routes"
        ],
        "summary": "update status of the candidate against the job_id",
        "security": [
          {
            "jwt": []
          }
        ],
        "description": "update status of the candidate against the job_id",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "req_data",
            "description": "Request data for update status of the candidate against the job_id",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "job_id": {
                  "type": "string"
                },
                "candidate_id": {
                  "type": "string"
                },
                "candidate_status": {
                  "type": "string"
                },
                "notes": {
                  "type": "string"
                },
                "attachments": {
                  "type": "string"
                },
                "joined_date": {
                  "type": "date"
                },

                "interview_details": {
                  "type": "object",
                  "properties": {
                    "interview_level": {
                      "type": "integer"

                    },
                    "interview_name": {
                      "type": "string"
                    },
                    "interviewer_name": {
                      "type": "string"
                    },
                    "interview_date": {
                      "type": "string",
                      "format": "date-time"

                    },
                    "mode": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "online_link": {
                      "type": "string"
                    },
                    "interview_notes": {
                      "type": "string"
                    }

                  }
                },
                "offer_details": {
                  "type": "object",
                  "properties": {
                    "joining_date": {
                      "type": "date"

                    },
                    "offered_salary": {
                      "type": "string"
                    },
                    "offer_date": {
                      "type": "date"
                    }

                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "update candidate status successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "update candidate status successfully"
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_jobs": {
      "post": {
        "tags": [ "Job Routes" ],
        "summary": "Get all jobs",
        "security": [ { "jwt": [] } ],
        "description": "Get all jobs",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching client details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field"
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search for clients based on a specific keyword(optional)"
                },
                "client_id": {
                  "type": "string",
                  "description": "Client ID for filtering (optional)",
                  "optional": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique identifier for the job candidate"
                },

                "requirement_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "requirement_type": {
                  "type": "string"
                },
                "company_name": {
                  "type": "string"
                },
                "contact_person": {
                  "type": "string"
                },
                "company_pitch": {
                  "type": "string"
                },
                "job_title": {
                  "type": "string"
                },
                "no_of_vacancies": {
                  "type": "integer"
                },
                "work_location": {
                  "type": "string"
                },
                "preferred_location": {
                  "type": "string"
                },
                "client_hiring_for": {
                  "type": "string"
                },
                "job_priority": {
                  "type": "string"
                },
                "industry": {
                  "type": "string"
                },
                "job_type": {
                  "type": "string"
                },
                "position_type": {
                  "type": "string"
                },
                "job_description": {
                  "type": "string"
                },
                "education": {
                  "type": "string"
                },
                "over_all_experience_from": {
                  "type": "integer"
                },
                "over_all_experience_to": {
                  "type": "integer"
                },
                "relevant_experience": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "primary_key_skills": {
                  "type": "string"
                },
                "secondary_key_skills": {
                  "type": "string"
                },
                "requirement_usp": {
                  "type": "string"
                },
                "salary_range_from": {
                  "type": "string"
                },
                "salary_range_to": {
                  "type": "string"
                },
                "notice_period": {
                  "type": "integer"
                },
                "age_from": {
                  "type": "integer"
                },
                "age_to": {
                  "type": "integer"
                },
                "rate_slab_type": {
                  "type": "string"
                },
                "bonus_components": {
                  "type": "string"
                },
                "candidate_choice": {
                  "type": "string"
                },
                "consider_hiring_ex_employees": {
                  "type": "string"
                },
                "no_poach_clause": {
                  "type": "string"
                },
                "NDA_employment_bond": {
                  "type": "string"
                },
                "appraisal_eligibility": {
                  "type": "string"
                },
                "work_timings": {
                  "type": "string"
                },
                "no_working_days_per_week": {
                  "type": "integer"
                },
                "transport_facility": {
                  "type": "string"
                },
                "req_classification": {
                  "type": "integer"
                },
                "last_date_to_share_CV": {
                  "type": "string",
                  "format": "date-time"
                },
                "assignee": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "is_job_active": {
                  "type": "boolean",
                  "default": true
                },
                "is_deleted": {
                  "type": "boolean",
                  "default": false
                },
                "desired_candidate_profile": {
                  "type": "string"
                },
                "target_company": {
                  "type": "string"
                },

                "client_id": {
                  "type": "string",
                  "description": "Unique identifier for the client"
                },
                "created_by": {
                  "type": "string",
                  "description": "Email address of the user who created the record"
                },
                "created_on": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time when the record was created"
                },
                "updated_by": {
                  "type": "string",
                  "description": "Email address of the user who updated the record"
                },
                "updated_on": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time when the record was updated"
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Only admin can view client details",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_job_status": {
      "post": {
        "tags": [ "Job Routes" ],
        "summary": "Get status of candidate for a job",
        "security": [ { "jwt": [] } ],
        "description": "Get status of candidate for a job",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching client details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field"
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search for clients based on a specific keyword(optional)"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Unique identifier for the job candidate"
                },
                "assignee": {
                  "type": "string",
                  "description": "Email address of the assignee"
                },
                "candidate_id": {
                  "type": "string",
                  "description": "Unique identifier for the candidate"
                },
                "candidate_status": {
                  "type": "string",
                  "description": "Status of the candidate"
                },
                "notes": {
                  "type": "string"
                },
                "attachments": {
                  "type": "string"
                },
                "created_by": {
                  "type": "string",
                  "description": "Email address of the user who created the record"
                },
                "created_on": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time when the record was created"
                },
                "interview_details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "Unique identifier for the interview detail"
                      },
                      "candidate_id": {
                        "type": "string",
                        "description": "Unique identifier for the candidate"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "Unique identifier for the client"
                      },
                      "created_by": {
                        "type": "string",
                        "description": "Email address of the user who created the record"
                      },
                      "created_on": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the record was created"
                      },
                      "interview_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of the interview"
                      },
                      "interview_level": {
                        "type": "integer",
                        "description": "Level of the interview"
                      },
                      "interview_name": {
                        "type": "string",
                        "description": "Name of the interview"
                      },
                      "interview_status": {
                        "type": "string",
                        "description": "Status of the interview"
                      },
                      "interviewer_name": {
                        "type": "string",
                        "description": "Name of the interviewer"
                      },
                      "job_id": {
                        "type": "string",
                        "description": "Unique identifier for the job"
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the interview"
                      },
                      "mode": {
                        "type": "string",
                        "description": "Mode of the interview"
                      },
                      "updated_by": {
                        "type": "string",
                        "description": "Email address of the user who updated the record"
                      },
                      "updated_on": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the record was updated"
                      }
                    }
                  }
                },
                "is_candidate_active": {
                  "type": "boolean",
                  "description": "Flag indicating if the candidate is active"
                },
                "is_deleted": {
                  "type": "boolean",
                  "description": "Flag indicating if the record is deleted"
                },
                "is_job_active": {
                  "type": "boolean",
                  "description": "Flag indicating if the job is active"
                },
                "job_id": {
                  "type": "string",
                  "description": "Unique identifier for the job"
                },
                "offered_salary": {
                  "type": "null",
                  "description": "Field for offered salary (currently null)"
                },
                "updated_by": {
                  "type": "string",
                  "description": "Email address of the user who updated the record"
                },
                "updated_on": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time when the record was updated"
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Only admin can view client details",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_job_history": {
      "post": {
        "tags": [ "Job Routes" ],
        "summary": "Get history of the status of job for a candidate",
        "security": [ { "jwt": [] } ],
        "description": "Get history of the status of job for a candidate",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching client details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true"
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field"
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search for clients based on a specific keyword(optional)"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "665986e16160dae1047ae9b9"
                },
                "job_candidate_id": {
                  "type": "string",
                  "example": "665986e16160dae1047ae9b8"
                },
                "candidate_history": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "interview_details": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/InterviewDetail"
                        },
                        "nullable": true
                      },
                      "notes": {
                        "type": "string",
                        "nullable": true
                      },
                      "offer_details": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/OfferDetail"
                        },
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "example": "Identified"
                      },
                      "updated_by": {
                        "type": "string",
                        "example": "shyama@mail.com"
                      },
                      "updated_on": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-31T13:44:25.527Z"
                      }
                    }
                  }
                }

              }

            }

          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Only admin can view client details",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_job": {
      "post": {
        "tags": [
          "Job Routes"
        ],
        "summary": "Delete job using job_id ",
        "description": "delete all the details of job.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching client details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "id of the job"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful delete operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "id doesnot exist"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },

    "/upload_company_from_excel": {
      "post": {
        "tags": [ "Company Routes" ],
        "summary": "upload company details  ",
        "security": [ { "jwt": [] } ],
        "description": "This endpoint allows authorized users to upload company details from an Excel file. The JWT authorization token must be provided in the header. The Excel file should contain company details in a specific format. As of now,`office_details_list` array cannot be uploaded via this api .In the 'contact_list' column, if needed, please give the unique contact emails seperated by comma.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "description": "Excel file containing company details",
            "required": true
          }
        ],
        "responses": {

          "200": {
            "description": "Data uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data uploaded successfully"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "status_code": {
                      "type": "integer",
                      "example": "200,201"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/upload_attachments": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "upload attachment details  ",
        "security": [ { "jwt": [] } ],
        "description": "This endpoint allows authorized users to upload attachments.The JWT authorization token must be provided in the header.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "name": "file",
            "in": "formData",
            "type": "array",
            "description": "Upload multiple attachment",
            "required": true,
            "items": {
              "type": "file"
            }
          },
          {
            "name": "type",
            "in": "formData",
            "type": "string",
            "description": "module name",
            "required": true

          }
        ],
        "responses": {
          "200": {
            "description": "file saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    },
                    "message": {
                      "type": "string",
                      "example": "file saved successfully"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "status_code": {
                      "type": "integer",
                      "example": "200,201"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_doc/attachment/{module_type}/{file}": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "get attachment details  ",
        "security": [ { "jwt": [] } ],
        "description": "This endpoint allows authorized users to Retrieves a document (attachment) based on module type and filename.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "name": "module_type",
            "in": "path",
            "type": "string",
            "description": "The module type associated with the document (e.g., user,company,candidate)",
            "required": true
          },
          {
            "name": "file",
            "in": "path",
            "type": "string",
            "description": "The {file_id.extension} of the document.",
            "required": true

          }
        ],
        "responses": {
          "200": {
            "description": "Success response with the document data (if found).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/update_column_settings": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "enabled columns for the users ",
        "security": [ { "jwt": [] } ],
        "description": "This endpoint allows authorized users to Retrieves a document (attachment) based on module type and filename.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "update_column_settings",
            "description": "column enable to view. fn_type should have the value 'order' or 'view'",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "func_type":{"type":"string","enum":["order","view"]},
                "Table_Name": {
                  "type": "array",
                  "description": "table name",
                  "items": {
                    "type": "object",
                    "properties": {
                      "db_column": {
                        "type": "string",
                        "example": "api_url"
                      },
                      "ui_column": {
                        "type": "string",
                        "example": "api_url"
                      },
                      "order": {
                        "type": "integer",
                        "example": 1
                      },
                      "enable": {
                        "type": "boolean",
                        "example": true
                      },
                      "default_enable": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Columns enabled for the user",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Columns enabled for the user"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }

      }
    },
    "/get_history": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "Get history of the candidate or company as per the given collection",
        "security": [ { "jwt": [] } ],
        "description": "Get history of the candidate or company as per the given collection",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Get history of the candidate or company as per the given collection",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "collection": {
                  "type": "string",
                  "description": "collection_name"
                },
                "ref_id": {
                  "type": "string",
                  "description": "id of the company or candidate",
                  "minimum": 1
                },
                "from_date": {
                  "type": "string",
                  "description": "from date",
                  "minimum": 1
                },
                "to_date": {
                  "type": "string",
                  "description": "to date"
                },
                "group_by_minutes": {
                  "type": "integer",
                  "description": "minutes to group the data"
                }

              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": ""
                },
                "updates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": { "type": "string" },
                      "nv": { "type": "string" },
                      "ov": { "type": "string" }
                    }
                  }
                },
                "updated_by": {
                  "type": "string",
                  "description": "Email of the user who updated the record."
                },
                "updated_on": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the update."
                }


              }

            }

          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Only admin can view client details",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/save_dynamic_widget": {
      "post": {
        "tags": [ "Dynamic Widget Routes" ],
        "summary": "Add dynamic widgets ",
        "security": [ { "jwt": [] } ],
        "description": "Creates a dynamic widget based on specified conditions.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding and updating widgets.The optional field visual_type may have values Summary,Pie,Bar,Line,Scatter,Ring",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the widget",
                  "minLength": 1
                },
                "info": {
                  "type": "string",
                  "description": "information of the widget",
                  "minLength": 1,
                  "required": false
                },
                "type": {
                  "type": "string",
                  "description": "type of the widget",
                  "minLength": 1,
                  "required": false
                },
                "file_name": {
                  "type": "string",
                  "description": "file name of the widget",
                  "minLength": 1,
                  "required": false
                },
                "class_name": {
                  "type": "string",
                  "description": "class name of the widget",
                  "minLength": 1,
                  "required": false
                },

                "description": {
                  "type": "string",
                  "description": "description of the widget",
                  "required": false
                },
                "query_information": {
                  "type": "object",
                  "required": false,
                  "description": "dynamic query information of the widget",
                  "properties": {
                    "conditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "table": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "value": {
                            "oneOf": [
                              { "type": "string" },
                              { "type": "number" },
                              { "type": "boolean" },
                              { "type": "object" },
                              { "type": "array" }
                            ]
                          }
                        }
                      }
                    },
                    "db_type": {
                      "type": "string"
                    },
                    "db_name": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string",
                      "enum": [ "and", "or", "AND", "OR" ]
                    },
                    "rules": {
                      "type": "array",
                      "required": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "conditions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "table": { "type": "string" },
                                "field": { "type": "string" },
                                "operator": { "type": "string" },
                                "value": {
                                  "oneOf": [
                                    { "type": "string" },
                                    { "type": "number" },
                                    { "type": "boolean" },
                                    { "type": "object" },
                                    { "type": "array" }
                                  ]
                                }
                              }
                            }
                          },
                          "rules": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "operation": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "visual_type": {
                  "type": "string",
                  "required": false,
                  "description": "Type of visualization",
                  "enum": [ "Summary", "Pie", "Bar", "Line", "Scatter", "Ring" ]
                },
                "visual_parameters": {
                  "type": "array",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "main_field": {
                        "type": "string",
                        "required": false
                      },
                      "series_value_field": {
                        "type": "array",
                        "required": false,
                        "items": {
                          "type": "string"
                        }
                      },
                      "multi_field": {
                        "type": "array",
                        "required": false,
                        "items": {
                          "type": "string"
                        }
                      },
                      "sort_by_column": {
                        "type": "string",
                        "required": false
                      },
                      "order_by": {
                        "type": "string",
                        "enum": [ "asc", "desc" ],
                        "required": false
                      },
                      "maximum_no_of_items": {
                        "type": "integer",
                        "required": false
                      }
                    }
                  }
                },
                "_id": {
                  "type": "string",
                  "description": "_id of the dynamic widget to be updated",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dynamic widgets added successfully/widgets updated successfully/",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating dynamic widget addition or updation"
                }
              }
            }
          },
          "201": {
            "description": "dynamic widget id doesnot exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "dynamic widget id doesnot exists"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_dynamic_widget": {
      "post": {
        "tags": [ "Dynamic Widget Routes" ],
        "summary": "Get dynamic widgets details ",
        "security": [ { "jwt": [] } ],
        "description": "Get dynamic widgets details.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding and updating widgets",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search term for filtering (optional)"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response with the document data (if found).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/generate_dynamic_widget_query": {
      "post": {
        "tags": [ "Dynamic Widget Routes" ],
        "summary": "Generate dynamic widget query and get data",
        "security": [ { "jwt": [] } ],
        "description": "Generate dynamic widget query and get data.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "query",
            "name": "_id",
            "type": "string",
            "description": "dynamic widget id",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for loading data corresponding to widget_id(needed only for table view)",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "Page number",
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page",
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "description": "Order by field asc or desc"
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort by field"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response with the document data (if found).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/preview_query_result": {
      "post": {
        "tags": [ "Dynamic Widget Routes" ],
        "summary": "Use dynamic widget query and get results",
        "security": [ { "jwt": [] } ],
        "description": "Use dynamic widget query and get results.The optional field visual_type may have values Summary,Pie,Bar,Line,Scatter,Ring",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding and updating widgets",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "Page number(Only for Summary table view-optional)",
                  "required": false,
                  "minimum": 1
                },
                "per_page": {
                  "type": "integer",
                  "description": "Users per page(Only for Summary table view-optional)",
                  "required": false,
                  "minimum": 1
                },
                "order_by": {
                  "type": "string",
                  "required": false,
                  "description": "Order by field asc or desc(Only for Summary table view-optional)"
                },
                "sort_by": {
                  "type": "string",
                  "required": false,
                  "description": "Sort by field(Only for Summary table view-optional)"
                },
                "filter_by": {
                  "type": "array",
                  "required": false,
                  "description": "Filter criteria (Optional - only for Summary table view)",
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "required": false,
                  "description": "Search term for filtering (optional - only for Summary table view)"
                },
                "query_information": {
                  "type": "object",
                  "required": false,
                  "description": "dynamic query information of the widget",
                  "properties": {
                    "conditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "table": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "value": {
                            "oneOf": [
                              { "type": "string" },
                              { "type": "number" },
                              { "type": "boolean" },
                              { "type": "object" },
                              { "type": "array" }
                            ]
                          }
                        }
                      }
                    },
                    "operation": {
                      "type": "string",
                      "enum": [ "and", "or", "AND", "OR" ]
                    },
                    "db_type": {
                      "type": "string"
                    },
                    "db_name": {
                      "type": "string"
                    },
                    "rules": {
                      "type": "array",
                      "required": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "conditions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "table": { "type": "string" },
                                "field": { "type": "string" },
                                "operator": { "type": "string" },
                                "value": {
                                  "oneOf": [
                                    { "type": "string" },
                                    { "type": "number" },
                                    { "type": "boolean" },
                                    { "type": "object" },
                                    { "type": "array" }
                                  ]
                                }
                              }
                            }
                          },
                          "rules": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "operation": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "visual_type": {
                  "type": "string",
                  "required": false,
                  "description": "Type of visualization(Optional)",
                  "enum": [ "Ring", "Summary", "Bar", "Scatter", "Line" ]
                },
                "visual_parameters": {
                  "type": "array",
                  "description": "Optional",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "main_field": {
                        "type": "string",
                        "required": false
                      },
                      "series_value_field": {
                        "type": "array",
                        "required": false,
                        "items": {
                          "type": "string"
                        }
                      },
                      "multi_field": {
                        "type": "array",
                        "required": false,
                        "items": {
                          "type": "string"
                        }
                      },
                      "sort_by_column": {
                        "type": "string",
                        "required": false
                      },
                      "order_by": {
                        "type": "string",
                        "enum": [ "asc", "desc" ],
                        "required": false
                      },
                      "maximum_no_of_items": {
                        "type": "integer",
                        "required": false
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response with the document data (if found).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/delete_dynamic_widget": {
      "post": {
        "tags": [ "Dynamic Widget Routes" ],
        "summary": "Delete Dynamic Widget Details",
        "security": [ { "jwt": [] } ],
        "description": "Delete details for an existing dynamic widget.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for deleting dynamic widget details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "_id of the dynamic widget to be deleted"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dynamic widget deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating dynamic widget deletion"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/client_registration": {
      "post": {
        "tags": [ "Register Routes" ],
        "summary": "Register a client",
        "description": "Register a client and send a confirmation email.",
        "parameters": [
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name"
                },
                "email": {
                  "type": "string",
                  "description": "email"
                },
                "phone": {
                  "type": "string",
                  "description": "phone number"
                },
                "company": {
                  "type": "string",
                  "description": "client name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/move_cv_to_list": {
      "post": {
        "tags": [ "MyList Routes" ],
        "summary": "Move Candidate List from one group to another",
        "description": "Moves a list of CVs from one group to another group in the database",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "list_data",
            "description": "list_data to be moved",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "from_list_id": {
                  "type": "string",
                  "description": "list_id of the list group1"
                },
                "to_list_id": {
                  "type": "string",
                  "description": "list_id of the list group2"
                },
                "candidate_id": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of Candidate IDs to be moved"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "candidate list moved to group successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message "
                },
                "status": {
                  "type": "string",
                  "description": "Success status"
                },
                "status_code": {
                  "type": "integer",
                  "description": "status code for success 200"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_registration_details": {
      "post": {
        "tags": [ "Register Routes" ],
        "summary": "Get Registration Details",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve details of clients contacting the application for registration.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching registration details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true",
                  "required": false
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1,
                  "required": false
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1,
                  "required": false
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field",
                  "required": false
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'",
                  "required": false
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search for clients based on a specific keyword(optional)",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Only product-admin/product-user can view client registration details",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/update_registration_status": {
      "post": {
        "tags": [
          "Register Routes"
        ],
        "summary": "Update client registration status",
        "description": "Update client registration status for an existing record.",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request_data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "status can be Pending/Contacted",
                  "enum": [ "Pending", "Contacted" ]
                },
                "comments": {
                  "type": "string",
                  "description": "Info about the client or notes"
                },
                "_id": {
                  "type": "string",
                  "description": "id of the entity"
                }
              },
              "required": [ "_id", "status" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Registration info does not exist"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/get_log_details": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "Get Log Details",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve log details.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching log details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true",
                  "required": false
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1,
                  "required": false
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1,
                  "required": false
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field",
                  "required": false
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'",
                  "required": false
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search based on a specific keyword(optional)",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "description": "Only product-admin/product-user can view log details",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/add_module_details": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "Module Info API",
        "security": [ { "jwt": [] } ],
        "description": "API for adding module_info into the MODULE_DETAILS collection.(for development purpose only)",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Module info to be added ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "module": {
                  "type": "string",
                  "description": "name of the module"
                },
                "access": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "api_name": {
                        "type": "string",
                        "description": "name of the api"
                      },
                      "submodule_name": {
                        "type": "string",
                        "description": "the submodule name related to the api"
                      },
                      "api_access": {
                        "type": "array",
                        "description": "list of operations - add/update/delete/view/upload",
                        "items": {
                          "type": "string"
                        }
                      },
                      "collection": {
                        "type": "array",
                        "description": "list of collections used",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "product-admin user added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "product-admin user added successfully"
                }
              }
            }
          },
          "201": {
            "description": "User exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Please contact administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_module_details": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "Get module list with api informations",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve module list with api informations.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching module list with api informations",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true",
                  "required": false
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1,
                  "required": false
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1,
                  "required": false
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field",
                  "required": false
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'",
                  "required": false
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search based on a specific keyword(optional)",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/load_role_permission": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "Load Role Permissions",
        "security": [ { "jwt": [] } ],
        "description": "API for loading role permissions from a configuration file into the database.(For development purpose)",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Role permissions loaded successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Role permissions loaded successfully"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Please contact administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_document/{folder}/{file}": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "get attachment details  ",
        "security": [ { "jwt": [] } ],
        "description": "This endpoint allows authorized users to Retrieves a document (attachment) based on folder and filename.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "name": "folder",
            "in": "path",
            "type": "string",
            "description": "The folder associated with the document (e.g., files)",
            "required": true
          },
          {
            "name": "file",
            "in": "path",
            "type": "string",
            "description": "The {file_name.extension} of the document.(e.g., basic_widget_load.xlsx)",
            "required": true

          }
        ],
        "responses": {
          "200": {
            "description": "Success response with the document data (if found).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/send_candidate_form": {
      "post": {
        "tags": [ "Candidate Routes" ],
        "summary": "Send candidate form emails",
        "security": [ { "jwt": [] } ],
        "description": "Send emails to candidates with a link to update their details using a unique token.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "List of candidates with their IDs, names, and emails",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "candidates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "candidate_id": {
                        "type": "string"
                      },
                      "candidate_name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                      }
                    },
                    "required": [ "candidate_id", "email" ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/update_candidate_details": {
      "post": {
        "tags": [
          "Candidate Routes"
        ],
        "summary": "Update candidate details via link",
        "description": "Save candidate details based on the provided token and JSON data",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "description": "Token received in the link for candidate details update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Origin",
            "description": "Origin header to determine the client's domain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "candidate_details",
            "description": "Candidate details to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "insert_from": {
                  "type": "string",
                  "example": "Web or Doc",
                  "required": false
                },
                "notes": {
                  "type": "string",
                  "example": "Notes",
                  "required": false
                },
                "key": {
                  "type": "string",
                  "example": "CANDIDATE_DETAILS",
                  "required": false
                },

                "email": {
                  "type": "string",
                  "example": "johnl.doe@example.com",
                  "required": false
                },
                "title": {
                  "type": "string",
                  "required": false
                },
                "first_name": {
                  "type": "string",
                  "required": false
                },
                "middle_name": {
                  "type": "string",
                  "required": false
                },
                "last_name": {
                  "type": "string",
                  "required": false
                },
                "date_of_birth": {
                  "type": "string",
                  "example": "1990-05-15T00:00:00.000Z",
                  "required": false
                },
                "age": {
                  "type": "integer",
                  "example": 31,
                  "required": false
                },
                "current_location": {
                  "type": "string",
                  "example": "New York",
                  "required": false
                },
                "primary_contact_number": {
                  "type": "string",
                  "example": "1234567890",
                  "required": false
                },
                "alternate_contact_number": {
                  "type": "string",
                  "example": "9876543210",
                  "required": false
                },
                "linkedin_profile": {
                  "type": "string",
                  "example": "https://www.linkedin.com/in/johndoe",
                  "required": false
                },
                "gender": {
                  "type": "string",
                  "example": "Male",
                  "required": false
                },
                "nationality": {
                  "type": "string",
                  "example": "American",
                  "required": false
                },
                "religion": {
                  "type": "string",
                  "example": "Christian",
                  "required": false
                },
                "languages_known_list": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": false,
                  "example": [
                    "English",
                    "Spanish"
                  ]
                },
                "person_with_disability": {
                  "type": "boolean",
                  "example": false,
                  "required": false
                },
                "nature_of_disability": {
                  "type": "string",
                  "example": "NA",
                  "required": false
                },
                "rural_or_urban": {
                  "type": "string",
                  "example": "rural",
                  "required": false
                },
                "marital_status": {
                  "type": "string",
                  "example": "Single",
                  "required": false
                },
                "spouse_status": {
                  "type": "boolean",
                  "example": true,
                  "required": false
                },
                "parental_status": {
                  "type": "boolean",
                  "example": true,
                  "required": false
                },
                "caregiver_status": {
                  "type": "boolean",
                  "example": true,
                  "required": false
                },
                "ctc_type": {
                  "type": "string",
                  "example": "Annual",
                  "required": false
                },
                "current_ctc": {
                  "type": "integer",
                  "example": 900000,
                  "required": false
                },
                "expected_ctc": {
                  "type": "integer",
                  "example": 1500000,
                  "required": false
                },
                "family_income": {
                  "type": "integer",
                  "example": 2000000,
                  "required": false
                },
                "expected_ctc_type": {
                  "type": "string",
                  "example": "Annual",
                  "required": false
                },
                "educational_details_list": {
                  "type": "array",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "ed_id": {
                        "type": "int",
                        "example": 1
                      },
                      "ed_course": {
                        "type": "string",
                        "example": "Bachelor's"
                      },
                      "ed_course_name": {
                        "type": "string",
                        "example": "Computer Science"
                      },
                      "ed_institute": {
                        "type": "string",
                        "example": "XYZ University"
                      },
                      "ed_completion_year": {
                        "type": "integer",
                        "example": 2018
                      },
                      "ed_specification": {
                        "type": "string",
                        "example": "Full-Time"
                      },
                      "ed_mode_of_education": {
                        "type": "string",
                        "example": "Online"
                      },
                      "ed_percentage": {
                        "type": "float",
                        "example": 100.0
                      }
                    }
                  }
                },
                "certification_details_list": {
                  "type": "array",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "cd_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "cd_course": {
                        "type": "string",
                        "example": "Bachelor's"
                      },
                      "cd_course_name": {
                        "type": "string",
                        "example": "Computer Science"
                      },
                      "cd_institute": {
                        "type": "string",
                        "example": "XYZ University"
                      },
                      "cd_completion_year": {
                        "type": "integer",
                        "example": 2018
                      },
                      "cd_specification": {
                        "type": "string",
                        "example": "Full-Time"
                      },
                      "cd_mode_of_education": {
                        "type": "string",
                        "example": "Online"
                      }
                    }
                  }
                },

                "relevant_experience": {
                  "type": "integer",
                  "example": 3,
                  "required": false
                },
                "total_job_changed": {
                  "type": "integer",
                  "example": 2,
                  "required": false
                },
                "cl_country": {
                  "type": "string",
                  "example": "USA",
                  "required": false
                },
                "cl_state": {
                  "type": "string",
                  "example": "Texas",
                  "required": false
                },
                "cl_city": {
                  "type": "string",
                  "example": "Dallas",
                  "required": false
                },
                "pl_country": {
                  "type": "string",
                  "example": "USA",
                  "required": false
                },
                "pl_state": {
                  "type": "string",
                  "example": "CA",
                  "required": false
                },
                "pl_city": {
                  "type": "string",
                  "example": "Los Angeles",
                  "required": false
                },
                "prl_country": {
                  "type": "string",
                  "example": "USA",
                  "required": false
                },
                "prl_state": {
                  "type": "string",
                  "example": "Texas",
                  "required": false
                },
                "prl_city": {
                  "type": "string",
                  "example": "Dallas",
                  "required": false
                },
                "total_experience_year": {

                  "type": "integer",
                  "example": 2019,
                  "required": false
                },
                "total_experience_months": {
                  "type": "integer",
                  "example": 3,
                  "required": false
                },
                "cwe_company_name": {
                  "type": "string",
                  "example": "ABC Company",
                  "required": false
                },
                "cwe_start_year": {
                  "type": "integer",
                  "example": 2019,
                  "required": false
                },
                "cwe_end_year": {
                  "type": "integer",
                  "example": 2020,
                  "required": false
                },
                "cwe_designation": {
                  "type": "string",
                  "example": "Software Engineer",
                  "required": false
                },
                "cwe_level": {
                  "type": "string",
                  "example": "Senior",
                  "required": false
                },
                "cwe_job_type": {
                  "type": "string",
                  "example": "Full-Time",
                  "required": false
                },
                "cwe_industry": {
                  "type": "string",
                  "example": "IT",
                  "required": false
                },
                "cwe_func_area": {
                  "type": "string",
                  "example": "Software",
                  "required": false
                },
                "cwe_reason_for_leaving": {
                  "type": "string",
                  "example": "Sick",
                  "required": false
                },
                "cwe_year_of_exp_year": {
                  "type": "integer",
                  "example": 2019,
                  "required": false
                },
                "cwe_year_of_exp_months": {
                  "type": "integer",
                  "example": 3,
                  "required": false
                },
                "previous_work_experience_list": {
                  "type": "array",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "pwe_company_name": {
                        "type": "string",
                        "example": "ABC Company"
                      },
                      "pwe_start_year": {
                        "type": "integer",
                        "example": 2019
                      },
                      "pwe_end_year": {
                        "type": "integer",
                        "example": 2020
                      },
                      "pwe_designation": {
                        "type": "string",
                        "example": "Software Engineer"
                      },
                      "pwe_level": {
                        "type": "string",
                        "example": "Senior"
                      },
                      "pwe_job_type": {
                        "type": "string",
                        "example": "Full-Time"
                      },
                      "pwe_industry": {
                        "type": "string",
                        "example": "IT"
                      },
                      "pwe_func_area": {
                        "type": "string",
                        "example": "Software"
                      },
                      "pwe_reason_for_leaving": {
                        "type": "string",
                        "example": "Sick"
                      },
                      "pwe_year_of_exp_year": {
                        "type": "integer",
                        "example": 2019
                      },
                      "pwe_year_of_exp_months": {
                        "type": "integer",
                        "example": 3
                      }
                    }
                  }
                },
                "passport_no": {
                  "type": "string",
                  "example": "1234987654",
                  "required": false
                },
                "travel_int_exp": {
                  "type": "integer",
                  "example": 3,
                  "required": false
                },
                "travel_nat_exp": {
                  "type": "integer",
                  "example": 2,
                  "required": false
                },
                "onsite_experience_list": {
                  "type": "array",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "country_visited": {
                        "type": "string",
                        "example": "USA"
                      },
                      "location": {
                        "type": "string",
                        "example": "Texas"
                      },
                      "visa_details": {
                        "type": "string",
                        "example": "H1B"
                      },
                      "visa_type": {
                        "type": "string",
                        "example": "H1B"
                      }
                    }
                  }
                },
                "primary_skills": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Java, C++, C, C#, Python"
                  },
                  "required": false

                },
                "secondary_skills": {
                  "type": "array",
                  "required": false,
                  "items": {
                    "type": "string",
                    "example": "Java, C++, C, C#, Python"
                  }
                },
                "willing_to_relocate": {
                  "type": "boolean",
                  "example": true,
                  "required": false
                },
                "notice_period": {
                  "type": "string",
                  "example": "3 months",
                  "required": false
                },
                "is_np_negotiable": {
                  "type": "boolean",
                  "example": true,
                  "required": false
                },
                "negotiable_period": {
                  "type": "integer",
                  "example": 3,
                  "required": false
                },
                "can_work_in_shifts": {
                  "type": "boolean",
                  "example": true,
                  "required": false
                },
                "pref_shift_timings": {
                  "type": "string",
                  "example": "9:00 AM - 5:00 PM",
                  "required": false
                },
                "career_break": {
                  "type": "boolean",
                  "example": true,
                  "required": false
                },
                "photo": {
                  "type": "string",
                  "example": "https://example.com/photo.jpg",
                  "required": false
                },
                "career_break_details_list": {
                  "type": "array",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "cbd_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "cbd_start_year": {
                        "type": "integer",
                        "example": 2019
                      },
                      "cbd_end_year": {
                        "type": "integer",
                        "example": 2020
                      },
                      "cbd_reason": {
                        "type": "string",
                        "example": "Sick"

                      }
                    }
                  }
                },
                "_id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Candidate details updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Candidate details updated successfully."
                },
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "status_code": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_collection_list": {
      "post": {
        "tags": [ "Dynamic_db Routes" ],
        "summary": "Get collection details along with columns and datatypes",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve details of collections.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching collection details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {

                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1,
                  "required": false
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1,
                  "required": false
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field",
                  "required": false,
                  "enum": [ "collection_name" ]
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'",
                  "required": false
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/enable_user_widget": {
      "post": {
        "tags": [ "Common Routes" ],
        "summary": "enable/disable collection or columns for widget for the users ",
        "security": [ { "jwt": [] } ],
        "description": "This endpoint allows authorized users to enable or disable collection or column for widget for the user.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_data",
            "description": "widget enable data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "description": "The _id of the user in USER_DETAILS collection"
                },
                "collections": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collection_name": {
                        "type": "string",
                        "description": "Name of the collection"
                      },
                      "widget_enable": {
                        "type": "boolean",
                        "description": "Optional. Enable/disable widget for the entire collection",
                        "required": false
                      },
                      "columns": {
                        "type": "array",
                        "description": "Optional. Array of columns with widget enablement settings",
                        "items": {
                          "type": "object",
                          "properties": {
                            "db_column": {
                              "type": "string",
                              "description": "Name of the database column"
                            },
                            "widget_enable": {
                              "type": "boolean",
                              "description": "Optional. Enable/disable widget for this column"
                            }
                          }
                        },
                        "required": false
                      }
                    }
                  }
                }
              }
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Widget collections/columns enabled for the user",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Widget collections/columns enabled for the user"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }

      }
    },
    "/save_role_permission": {
      "post": {
        "tags": [ "Permission Routes" ],
        "summary": "Add/update role permission details",
        "security": [ { "jwt": [] } ],
        "description": "Add/update details for role permission.Please use module name as the key inside permissions",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding role permission details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role_id": {
                  "type": "string",
                  "descriptions": "role_id of the user for which permissions needs to be updated"
                },
                "permissions": {
                  "type": "object",
                  "description": "Permissions object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "boolean",
                      "description": "Direct boolean value for access"
                    }
                  }
                }
              }
            }
          }

        ],
        "responses": {
          "200": {
            "description": "role permissions saved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating role permission addition/updation"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/save_user_permission": {
      "post": {
        "tags": [ "Permission Routes" ],
        "summary": "Add/update user permission details",
        "security": [ { "jwt": [] } ],
        "description": "Add/update details for user permission.Please use module name as the key inside permissions",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for adding user permission details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "description": "user_id of the user for which permissions needs to be updated"
                },
                "permissions": {
                  "type": "object",
                  "description": "Permissions object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Direct boolean value for access"
                        },
                        {
                          "type": "string",
                          "enum": [ "default" ],
                          "description": "Default value for access"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user permissions saved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Success message indicating user permission addition/updation"
                }
              }
            }
          },
          "201": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_role_permission": {
      "post": {
        "tags": [ "Permission Routes" ],
        "summary": "Get role permission details",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve role permission details.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching role permission details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "is_download": {
                  "type": "boolean",
                  "description": "false or true",
                  "required": false
                },
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1,
                  "required": false
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1,
                  "required": false
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field",
                  "required": false
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'",
                  "required": false
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search based on a specific keyword(optional)",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/get_db_details": {
      "post": {
        "tags": [ "Dynamic DB details" ],
        "summary": "Get db details",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve database details.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching database details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "integer",
                  "description": "Page number for pagination",
                  "minimum": 1,
                  "required": false
                },
                "per_page": {
                  "type": "integer",
                  "description": "Number of records per page",
                  "minimum": 1,
                  "required": false
                },
                "sort_by": {
                  "type": "string",
                  "description": "Sort results by a specific field",
                  "required": false
                },
                "order_by": {
                  "type": "string",
                  "description": "Order results in 'asc' or 'desc'",
                  "required": false
                },
                "filter_by": {
                  "type": "array",
                  "description": "Filter criteria (optional)",
                  "required": false,
                  "items": {
                    "type": "object",
                    "properties": {
                      "column_name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "search_by": {
                  "type": "string",
                  "description": "Search based on a specific keyword(optional)",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },"count": {
                  "type": "integer"
                }
              }
            }
          },
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "No Data Found"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    },
    "/search_candidates_by_job_desc": {
      "post": {
        "tags": [ "Candidate Routes" ],
        "summary": "Search the candidates based on job description using model",
        "security": [ { "jwt": [] } ],
        "description": "This endpoint allows authorized users to retrieve documents based job desc",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "search_candidates_by_job_desc",
            "description": "Search candidates based on the given job description keywords",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data":{"type":"string"}
              }
            }
          }
        ],

        "responses": {
          "200": {
            "description": "candidate details",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "list of candidates based on the keywords processed"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }

      }
    },
    "/get_user_permission": {
      "post": {
        "tags": [ "Permission Routes" ],
        "summary": "Get user permission details",
        "security": [ { "jwt": [] } ],
        "description": "Retrieve user permission details.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string",
            "description": "JWT authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "request_body",
            "description": "Request body for fetching user permission details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "filter_by": {
                  "type": "array",
                  "description": "List of filter criteria",
                  "required": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "array",
                        "description": "_id of USER_DETAILS",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "200a": {
            "description": "Excel file",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "example": "Binary Excel file data",
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message indicating a bad request"
                }
              }
            }
          },
          "500": {
            "description": "Please contact administrator",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error message advising to contact the administrator"
                }
              }
            }
          }
        }
      }
    }
  }
}